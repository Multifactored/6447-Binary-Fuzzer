#!/usr/bin/env python3
# pylint: disable=W0614
from pwn import *
import sys
import subprocess
import os
from csvHelpers import *
from jsonHelpers import *
from type_checker import checkCSV, checkJSON, checkXML

# this is to silent pwntool logs
context.log_level = 'error'

def runCSVFuzzer(sampleInput, binary):
    checkBufferOverflowLines(sampleInput, binary)
    checkBufferOverflowColumns(sampleInput, binary)

def runJSONFuzzer(sampleInput, binary):
    fuzzJSON(sampleInput, binary)

def runXMLFuzzer(sampleInput, binary):
    pass

if __name__ == "__main__":

    # First check the correct number of arguments are given.
    if len(sys.argv) != 3:
        sys.exit("Usage: ./fuzzer program sampleinput.txt")

    # We begin by opening the sample input file for reading, and extract the contents.
    try:
        sampleInput = open(sys.argv[2], 'r')
    except:
        print("Error:", sys.exc_info()[0])
        sys.exit("Usage: ./fuzzer program sampleinput.txt")

    # We also know the binary will be the first argument given.
    binary = sys.argv[1]

    # Now we can begin fuzzing the binary.
    # To begin, we first fuzz the binary with input from '/dev/urandom'.
    urandomFuzzer(binary)

    # Next, we can try bit flipping the sample input.
    bitFlip(sampleInput, binary)

    # We first check if it is in csv format.
    if checkCSV(sampleInput):
        print("Is a CSV file...")
        runCSVFuzzer(sampleInput, binary)
    # Next we check if it is in json format.
    elif checkJSON(sampleInput):
        print("Is a JSON file...")
        for _ in range(10):
            runJSONFuzzer(sampleInput,binary)
    elif checkXML(sampleInput):
        print("Is a XML file...")
        runXMLFuzzer(sampleInput, binary)

    print("No vulnerabilities found :(")
