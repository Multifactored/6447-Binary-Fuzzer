#!/usr/bin/env python3
# pylint: disable=W0614
from pwn import *
import sys
import subprocess
import os
from csvHelpers import *
from jsonHelpers import *
from type_checker import checkCSV, checkJSON, checkXML
import concurrent.futures

def runCSVFuzzer(sampleInput, binary):
    print("Is a CSV file...")
    checkBufferOverflowLines(sampleInput, binary)
    checkBufferOverflowColumns(sampleInput, binary)

def runJSONFuzzer(sampleInput, binary):
    print("Is a JSON file...")
    fuzzJSON(sampleInput, binary)

def runXMLFuzzer(sampleInput, binary):
    print("Is an XML file...")
    pass

if __name__ == "__main__":

    # First check the correct number of arguments are given.
    if len(sys.argv) != 3:
        sys.exit("Usage: ./fuzzer program sampleinput.txt")

    # We begin by opening the sample input file for reading, and extract the contents.
    try:
        sampleInput = open(sys.argv[2], 'r')
    except:
        print("Error:", sys.exc_info()[0])
        sys.exit("Usage: ./fuzzer program sampleinput.txt")

    # We also know the binary will be the first argument given.
    binary = sys.argv[1]

    with concurrent.futures.ThreadPoolExecutor(max_workers=5) as executor:

        # Now we can begin fuzzing the binary.
        # We first check if it is in csv format.
        if checkCSV(sampleInput):
            executor.submit(runCSVFuzzer, sampleInput, binary)
        # Next we check if it is in json format.
        elif checkJSON(sampleInput):
            executor.submit(runJSONFuzzer, sampleInput, binary)
        # Finally we see if it is in xml format.
        elif checkXML(sampleInput):
            executor.submit(runXMLFuzzer, sampleInput, binary)

        # If we didn't find a vulnerability through format-specific fuzzing,
        # we can now do some generic fuzzing.
        # So, we first fuzz the binary with input from '/dev/urandom'.
        executor.submit(urandomFuzzer, binary)

        # And then we try bit flipping the sample input.
        executor.submit(bitFlip, sampleInput, binary)

    print("No vulnerabilities found :(")

# TODO: json2, plaintext2, xml1, xml2, xml3
